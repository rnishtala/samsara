version: '3.4'
services:
  worker:
    build: .
    image: &img worker
    command: [celery, worker, --app=worker.app, --pool=gevent, --concurrency=20, --loglevel=INFO]
    environment: &env
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - SAMSARA_API_KEY=samsara_api_<KEY>
      - SENSOR_ID=278018084739635
      - ENDPOINTS=https://api.samsara.com/v1/sensors/temperature,https://api.samsara.com/v1/sensors/humidity
      - SCHEDULE=30
    depends_on:
      - beat
      - rabbitmq
    restart: 'no'
    volumes:
      - ./app:/app

  dash:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dash_dash
    command: python app.py
    environment: *env
    volumes:
      - ./app:/app
    ports:
      - "80:8080"

  beat:
    build: .
    image: *img
    command: [celery, beat, --app=worker.app, --loglevel=INFO]
    environment: *env
    depends_on:
      - rabbitmq
    restart: 'no'
    volumes:
      - ./app:/app

  rabbitmq:
    image: rabbitmq:3.7.8

  worker-minio:
    build: .
    image: *img
    command: [celery, worker, --app=worker.app, --pool=gevent, --concurrency=20, --queues=minio, --loglevel=INFO]
    environment: *env
    depends_on:
      - beat
      - rabbitmq
    restart: 'no'
    volumes:
      - ./app:/app

  minio:
    image: minio/minio:RELEASE.2018-11-06T01-01-02Z
    command: server /export
    environment: *env
    ports:
      - 90:9000
    volumes:
      - minio:/data

volumes:
  minio:
